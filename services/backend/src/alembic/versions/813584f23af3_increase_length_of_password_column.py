"""Increase length of password  column

Revision ID: 813584f23af3
Revises: 2bfd8f1562c7
Create Date: 2024-06-03 12:02:32.239485

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '813584f23af3'
down_revision: Union[str, None] = '2bfd8f1562c7'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_test2_id', table_name='test2')
    op.drop_table('test2')
    op.drop_index('ix_reasoncodes_id', table_name='reasoncodes')
    op.drop_table('reasoncodes')
    op.drop_index('ix_user_id', table_name='user')
    op.drop_index('ix_user_username', table_name='user')
    op.drop_table('user')
    op.drop_index('ix_parameters_id', table_name='parameters')
    op.drop_table('parameters')
    op.drop_index('ix_users_id', table_name='users')
    op.drop_table('users')
    op.drop_index('ix_machine_Machine_Name', table_name='machine')
    op.drop_index('ix_machine_Machine_id', table_name='machine')
    op.drop_table('machine')
    op.drop_index('ix_mongoDBDataMES_id', table_name='mongoDBDataMES')
    op.drop_table('mongoDBDataMES')
    op.drop_index('ix_status_id', table_name='status')
    op.drop_table('status')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('status',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('machine_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('is_running', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('running_hours', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('is_off', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('off_hours', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('is_idle', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('idle_hours', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('is_maintenance', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('maintenance_hours', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['machine_id'], ['machine.machine_id'], name='status_machine_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='status_pkey')
    )
    op.create_index('ix_status_id', 'status', ['id'], unique=False)
    op.create_table('mongoDBDataMES',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('createdDate', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('L1Name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('plant', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('line', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('partNumber', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('machineName', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('startTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('EndTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('hour', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('shift', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('actual', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('target', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('totalTime', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('availableTime', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('scheduledDowntime', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('updateDate', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('actualCycleTime', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('availability', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('productionTime', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('cycle', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('cycleTime', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('fttLoss', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('fttComment', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('fttColor', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('oee', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('quality', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('targetNoDown', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('downTime', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('alram', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('totalLoss', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('totalSlowRunning', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('totalMicroStoppage', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('totalIdleTime', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('totalCycleTime', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('start', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('End', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('status', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='mongoDBDataMES_pkey')
    )
    op.create_index('ix_mongoDBDataMES_id', 'mongoDBDataMES', ['id'], unique=False)
    op.create_table('machine',
    sa.Column('machine_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('machine_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('is_selected', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('machine_id', name='machine_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_machine_Machine_id', 'machine', ['machine_id'], unique=False)
    op.create_index('ix_machine_Machine_Name', 'machine', ['machine_name'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('password', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('category', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('is_admin', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey')
    )
    op.create_index('ix_users_id', 'users', ['id'], unique=False)
    op.create_table('parameters',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('machine_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('availability', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('performance', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('quality', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['machine_id'], ['machine.machine_id'], name='parameters_machine_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='parameters_pkey')
    )
    op.create_index('ix_parameters_id', 'parameters', ['id'], unique=False)
    op.create_table('user',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('password', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('category', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('is_admin', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='user_pkey')
    )
    op.create_index('ix_user_username', 'user', ['username'], unique=True)
    op.create_index('ix_user_id', 'user', ['id'], unique=False)
    op.create_table('reasoncodes',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('reasonName', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('reasonColor', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('unit', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('value', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('comment', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='reasoncodes_pkey')
    )
    op.create_index('ix_reasoncodes_id', 'reasoncodes', ['id'], unique=False)
    op.create_table('test2',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='test2_pkey')
    )
    op.create_index('ix_test2_id', 'test2', ['id'], unique=False)
    # ### end Alembic commands ###
